[{"path":"https://shum461.github.io/sweets/LICENSE.html","id":null,"dir":"","previous_headings":"","what":"MIT License","title":"MIT License","text":"Copyright (c) 2024 sweets authors Permission hereby granted, free charge, person obtaining copy software associated documentation files (“Software”), deal Software without restriction, including without limitation rights use, copy, modify, merge, publish, distribute, sublicense, /sell copies Software, permit persons Software furnished , subject following conditions: copyright notice permission notice shall included copies substantial portions Software. SOFTWARE PROVIDED “”, WITHOUT WARRANTY KIND, EXPRESS IMPLIED, INCLUDING LIMITED WARRANTIES MERCHANTABILITY, FITNESS PARTICULAR PURPOSE NONINFRINGEMENT. EVENT SHALL AUTHORS COPYRIGHT HOLDERS LIABLE CLAIM, DAMAGES LIABILITY, WHETHER ACTION CONTRACT, TORT OTHERWISE, ARISING , CONNECTION SOFTWARE USE DEALINGS SOFTWARE.","code":""},{"path":"https://shum461.github.io/sweets/authors.html","id":null,"dir":"","previous_headings":"","what":"Authors","title":"Authors and Citation","text":"Steve Hummel. Author, maintainer.","code":""},{"path":"https://shum461.github.io/sweets/authors.html","id":"citation","dir":"","previous_headings":"","what":"Citation","title":"Authors and Citation","text":"Hummel S (2024). sweets: Disposition Tables Listings. R package version 0.0.0.9000, https://shum461.github.io/sweets/.","code":"@Manual{,   title = {sweets: Disposition Tables and Listings},   author = {Steve Hummel},   year = {2024},   note = {R package version 0.0.0.9000},   url = {https://shum461.github.io/sweets/}, }"},{"path":"https://shum461.github.io/sweets/index.html","id":"sweets-","dir":"","previous_headings":"","what":"Disposition Tables and Listings","title":"Disposition Tables and Listings","text":"Steve’s Workflow Enumerating Elegant Text listings dispositionS","code":""},{"path":"https://shum461.github.io/sweets/index.html","id":"installation","dir":"","previous_headings":"","what":"Installation","title":"Disposition Tables and Listings","text":"can install development version sweets GitHub :","code":"devtools::install_github(\"shum461/sweets\")"},{"path":"https://shum461.github.io/sweets/index.html","id":"example","dir":"","previous_headings":"","what":"Example","title":"Disposition Tables and Listings","text":"basic example shows solve common problem: Error: callr subprocess failed: ‘sweet_disposition’ exported object ‘namespace:sweets’","code":"library(dplyr) #>  #> Attaching package: 'dplyr' #> The following objects are masked from 'package:stats': #>  #>     filter, lag #> The following objects are masked from 'package:base': #>  #>     intersect, setdiff, setequal, union  fd <- get(data(\"fake_data\")) fd %>% cnt(DELFN,STUDY,n_distinct_vars = USUBJID, prop = FALSE, pct = FALSE) fd %>%   sweet_disposition(subjid = USUBJID,                       group_vars = STUDY)"},{"path":"https://shum461.github.io/sweets/index.html","id":"count-and-keeps","dir":"","previous_headings":"","what":"Count and Keeps","title":"Disposition Tables and Listings","text":"add deletion flags ‘r cnt_n_keeps’ wish count remove samples subjects special using README.Rmd instead just README.md? can include R chunks like :","code":"fd %>%     sweet_disposition(subjid = USUBJID,                       group_vars = STUDY, cnt_n_keeps = c(6,7)) summary(cars) #>      speed           dist        #>  Min.   : 4.0   Min.   :  2.00   #>  1st Qu.:12.0   1st Qu.: 26.00   #>  Median :15.0   Median : 36.00   #>  Mean   :15.4   Mean   : 42.98   #>  3rd Qu.:19.0   3rd Qu.: 56.00   #>  Max.   :25.0   Max.   :120.00"},{"path":"https://shum461.github.io/sweets/reference/add_listing_to_report.html","id":null,"dir":"Reference","previous_headings":"","what":"Add each listing to the initialized report — add_listing_to_report","title":"Add each listing to the initialized report — add_listing_to_report","text":"add_listing_to_report() used build listings one deletion flag time","code":""},{"path":"https://shum461.github.io/sweets/reference/add_listing_to_report.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Add each listing to the initialized report — add_listing_to_report","text":"","code":"add_listing_to_report(deletion_report, listing, ...)"},{"path":"https://shum461.github.io/sweets/reference/add_listing_to_report.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Add each listing to the initialized report — add_listing_to_report","text":"deletion_report Name initialized deletion report made build_report() listing Data used listing. Subset variables best portray data deleted. Selected variables source variables possible ... additional arguments passed reporter::create_table()","code":""},{"path":"https://shum461.github.io/sweets/reference/add_listing_to_report.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Add each listing to the initialized report — add_listing_to_report","text":"deletion report object includes added listings titles","code":""},{"path":"https://shum461.github.io/sweets/reference/add_listing_to_report.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Add each listing to the initialized report — add_listing_to_report","text":"","code":"if (FALSE) { # \\dontrun{ # A deletion report with DELFN 1 and 9 added    add_listing_to_report(    listing = pd_delimp %>%      filter(DELFN == 9) %>%      select(STUDY, USUBJID, VISIT, DV, SCF),    title = \"Missing Concentration Value\"  ) } # }"},{"path":"https://shum461.github.io/sweets/reference/build_report.html","id":null,"dir":"Reference","previous_headings":"","what":"Initialize a listing report — build_report","title":"Initialize a listing report — build_report","text":"Initialize listing report","code":""},{"path":"https://shum461.github.io/sweets/reference/build_report.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Initialize a listing report — build_report","text":"","code":"build_report(output_path = \".\", file_name, ...)"},{"path":"https://shum461.github.io/sweets/reference/build_report.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Initialize a listing report — build_report","text":"output_path Directory listing output file_name Name listings file ... Extra arguments passed reporter::options_fixed()","code":""},{"path":"https://shum461.github.io/sweets/reference/build_report.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Initialize a listing report — build_report","text":"","code":"if (FALSE) { # \\dontrun{ del_report <- build_report(file_name = \"deletion-listings\") } # }"},{"path":"https://shum461.github.io/sweets/reference/cnt_chocula.html","id":null,"dir":"Reference","previous_headings":"","what":"Compare two counts — cnt_chocula","title":"Compare two counts — cnt_chocula","text":"Compare two counts","code":""},{"path":"https://shum461.github.io/sweets/reference/cnt_chocula.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Compare two counts — cnt_chocula","text":"","code":"cnt_chocula(df1, df2, vars, ...)"},{"path":"https://shum461.github.io/sweets/reference/cnt_chocula.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Compare two counts — cnt_chocula","text":"df1 first data frame compare df2 second data frame compare vars variables count ... variables count","code":""},{"path":"https://shum461.github.io/sweets/reference/cnt_chocula.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Compare two counts — cnt_chocula","text":"data frame counts differences.","code":""},{"path":"https://shum461.github.io/sweets/reference/cnt_chocula.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Compare two counts — cnt_chocula","text":"","code":"if (FALSE) { # \\dontrun{  mtcars2 <- mtcars[mtcars$\"cyl\"> 4, ]  cnt_chocula(mtcars,mtcars2)  } # }"},{"path":"https://shum461.github.io/sweets/reference/most_recent.html","id":null,"dir":"Reference","previous_headings":"","what":"most recent — most_recent","title":"most recent — most_recent","text":"recent","code":""},{"path":"https://shum461.github.io/sweets/reference/most_recent.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"most recent — most_recent","text":"","code":"most_recent(path = NULL, pattern = NULL, newest_only = TRUE)"},{"path":"https://shum461.github.io/sweets/reference/most_recent.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"most recent — most_recent","text":"path filepath pattern one regex patters e.g. c(\"dm\",\"lb\")","code":""},{"path":"https://shum461.github.io/sweets/reference/most_recent.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"most recent — most_recent","text":"data frame","code":""},{"path":"https://shum461.github.io/sweets/reference/most_recent.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"most recent — most_recent","text":"","code":"if (FALSE) { # \\dontrun{ most_recent() } # }"},{"path":"https://shum461.github.io/sweets/reference/pipe.html","id":null,"dir":"Reference","previous_headings":"","what":"Pipe operator — %>%","title":"Pipe operator — %>%","text":"See magrittr::%>% details.","code":""},{"path":"https://shum461.github.io/sweets/reference/pipe.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Pipe operator — %>%","text":"","code":"lhs %>% rhs"},{"path":"https://shum461.github.io/sweets/reference/pipe.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Pipe operator — %>%","text":"lhs value magrittr placeholder. rhs function call using magrittr semantics.","code":""},{"path":"https://shum461.github.io/sweets/reference/pipe.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Pipe operator — %>%","text":"result calling rhs(lhs).","code":""},{"path":"https://shum461.github.io/sweets/reference/pool_disposition.html","id":null,"dir":"Reference","previous_headings":"","what":"Make a pooled disposition table — pool_disposition","title":"Make a pooled disposition table — pool_disposition","text":"Make pooled disposition table","code":""},{"path":"https://shum461.github.io/sweets/reference/pool_disposition.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Make a pooled disposition table — pool_disposition","text":"","code":"pool_disposition(disp_table)"},{"path":"https://shum461.github.io/sweets/reference/pool_disposition.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Make a pooled disposition table — pool_disposition","text":"disp_table object class 'disposition_table'","code":""},{"path":"https://shum461.github.io/sweets/reference/pool_disposition.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Make a pooled disposition table — pool_disposition","text":"pooled disposition table.","code":""},{"path":"https://shum461.github.io/sweets/reference/pool_disposition.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Make a pooled disposition table — pool_disposition","text":"","code":"if (FALSE) { # \\dontrun{ pool_disposition(disp_table = my_disposition_table) } # }"},{"path":"https://shum461.github.io/sweets/reference/sourpaths.html","id":null,"dir":"Reference","previous_headings":"","what":"sour paths — sourpaths","title":"sour paths — sourpaths","text":"table file paths ready pasted email","code":""},{"path":"https://shum461.github.io/sweets/reference/sourpaths.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"sour paths — sourpaths","text":"","code":"sourpaths(full.names = TRUE, path = NULL, ...)"},{"path":"https://shum461.github.io/sweets/reference/sourpaths.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"sour paths — sourpaths","text":"full.names Default TRUE path directory path pull . Default '../data/' ... additional arguments passed list.files()","code":""},{"path":"https://shum461.github.io/sweets/reference/sourpaths.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"sour paths — sourpaths","text":"html DT::datatable() 'Copy' button","code":""},{"path":"https://shum461.github.io/sweets/reference/sourpaths.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"sour paths — sourpaths","text":"","code":"if (FALSE) { # \\dontrun{ sourpaths(path=\"data/\",pattern=\"pk\") } # }"},{"path":"https://shum461.github.io/sweets/reference/sweet_asmbdat.html","id":null,"dir":"Reference","previous_headings":"","what":"sweet asmbdat — sweet_asmbdat","title":"sweet asmbdat — sweet_asmbdat","text":"Checks working asmbdat directory","code":""},{"path":"https://shum461.github.io/sweets/reference/sweet_asmbdat.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"sweet asmbdat — sweet_asmbdat","text":"","code":"sweet_asmbdat()"},{"path":"https://shum461.github.io/sweets/reference/sweet_asmbdat.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"sweet asmbdat — sweet_asmbdat","text":"TRUE FALSE","code":""},{"path":"https://shum461.github.io/sweets/reference/sweet_asmbdat.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"sweet asmbdat — sweet_asmbdat","text":"","code":"if (FALSE) { # \\dontrun{ sweet_asmbdat() } # }"},{"path":"https://shum461.github.io/sweets/reference/sweet_disposition.html","id":null,"dir":"Reference","previous_headings":"","what":"Make a disposition table — sweet_disposition","title":"Make a disposition table — sweet_disposition","text":"Count number subjects samples impacted \"deletion flag\" DELFN","code":""},{"path":"https://shum461.github.io/sweets/reference/sweet_disposition.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Make a disposition table — sweet_disposition","text":"","code":"sweet_disposition(   data,   subjid,   group_vars,   cnt_n_keeps = NULL,   init_desc = \"Concentration Records Received\" )"},{"path":"https://shum461.github.io/sweets/reference/sweet_disposition.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Make a disposition table — sweet_disposition","text":"data data frame must include deletion flags called DELFN. subjid Subject Identifier USUBJID, ID. group_vars grouping variables useful disposition tables STUDY STUDYID. none provided default group=\"1\" set cnt_n_keeps Deletion Flags DELFN included disposition table remove subjects rows. init_desc Initial description records received default \"Concentration Records Received\"","code":""},{"path":"https://shum461.github.io/sweets/reference/sweet_disposition.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Make a disposition table — sweet_disposition","text":"disposition table.","code":""},{"path":"https://shum461.github.io/sweets/reference/sweet_disposition.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Make a disposition table — sweet_disposition","text":"","code":"if (FALSE) { # \\dontrun{ sweet_disposition(subjid = USUBJID, group_vars = c(STUDY), cnt_n_keeps = c(16,24) )} # }"},{"path":"https://shum461.github.io/sweets/reference/sweet_save.html","id":null,"dir":"Reference","previous_headings":"","what":"Copy files from data directory to archive directory — sweet_save","title":"Copy files from data directory to archive directory — sweet_save","text":"Copy files data directory archive directory","code":""},{"path":"https://shum461.github.io/sweets/reference/sweet_save.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Copy files from data directory to archive directory — sweet_save","text":"","code":"sweet_save(asmbdat_path = getwd(), archive_path = NULL, ...)"},{"path":"https://shum461.github.io/sweets/reference/sweet_save.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Copy files from data directory to archive directory — sweet_save","text":"asmbdat_path path projects asmbdat directory. Defaults working directory archive_path path projects archive directory. create new archive directory one exists well dated folders inside archive directory. Dated archive directory defaults System Date ... arguments passed fs::dir_info() .e. regexp, glob","code":""},{"path":"https://shum461.github.io/sweets/reference/sweet_save.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Copy files from data directory to archive directory — sweet_save","text":"files moved data archive directory.","code":""},{"path":"https://shum461.github.io/sweets/reference/sweet_sponsor.html","id":null,"dir":"Reference","previous_headings":"","what":"sweet sponsor — sweet_sponsor","title":"sweet sponsor — sweet_sponsor","text":"Checks working client directory","code":""},{"path":"https://shum461.github.io/sweets/reference/sweet_sponsor.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"sweet sponsor — sweet_sponsor","text":"","code":"sweet_sponsor()"},{"path":"https://shum461.github.io/sweets/reference/sweet_sponsor.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"sweet sponsor — sweet_sponsor","text":"TRUE FALSE","code":""},{"path":"https://shum461.github.io/sweets/reference/sweet_sponsor.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"sweet sponsor — sweet_sponsor","text":"","code":"if (FALSE) { # \\dontrun{ sweet_sponsor() } # }"},{"path":"https://shum461.github.io/sweets/reference/write_listings_report.html","id":null,"dir":"Reference","previous_headings":"","what":"Write a listing report — write_listings_report","title":"Write a listing report — write_listings_report","text":"Output path set initializing using build_report() function differs reporter::write_report() including N= counts end listing","code":""},{"path":"https://shum461.github.io/sweets/reference/write_listings_report.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Write a listing report — write_listings_report","text":"","code":"write_listings_report(deletion_report, ...)"},{"path":"https://shum461.github.io/sweets/reference/write_listings_report.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Write a listing report — write_listings_report","text":"deletion_report deletion report built using build_report() add_listing_to_report() ... Extra arguments passed reporter::write_report()","code":""},{"path":"https://shum461.github.io/sweets/reference/write_listings_report.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Write a listing report — write_listings_report","text":"","code":"if (FALSE) { # \\dontrun{ write_listings_report(del_report) } # }"}]
